# Dev-specific properties
smallrye.config.source.file.locations=/run/secrets/

# MongoDB Configuration for Development
quarkus.mongodb.connection-string=mongodb+srv://${mongo-db-username}:${mongo-db-password}@mongo.ibnj1na.mongodb.net/?retryWrites=true&w=majority&appName=Mongo
mongodb.database=kitchensink_dev

# OIDC Configuration for JWT validation (Development)
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/KitchensinkDev
quarkus.oidc.client-id=kitchensink-backend
quarkus.oidc.credentials.secret=${oidc-client-secret}
quarkus.oidc.application-type=service
quarkus.oidc.roles.role-claim-path=realm_access/roles
# Tell Quarkus to accept tokens from the external URL
quarkus.oidc.token.issuer=http://localhost:8081/realms/KitchensinkDev

# JWT Configuration (Development)
mp.jwt.verify.publickey.location=${quarkus.oidc.auth-server-url}/protocol/openid-connect/certs
# Use the external issuer URL that matches the token
mp.jwt.verify.issuer=http://localhost:8081/realms/KitchensinkDev

# Keycloak Admin Client Configuration (Development)
quarkus.keycloak.admin-client.server-url=http://keycloak:8080
quarkus.keycloak.admin-client.realm=KitchensinkDev
quarkus.keycloak.admin-client.client-id=kitchensink-backend
quarkus.keycloak.admin-client.client-secret=${oidc-client-secret}
quarkus.keycloak.admin-client.grant-type=CLIENT_CREDENTIALS

# CORS Configuration (Development)
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:5173
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=*
quarkus.http.cors.access-control-max-age=24H
