# Common properties for both dev and prod
quarkus.application.name=mongodb-quarkus-kitchensink
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] [%X{requestId}] %s%e%n
quarkus.application.version=1.0.0

# OIDC Configuration for JWT validation
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/KitchensinkDev
quarkus.oidc.client-id=kitchensink-backend
quarkus.oidc.credentials.secret=ZjAD40Bb20hScJxNpvVl4VyDGGX1JN06
quarkus.oidc.application-type=service
quarkus.oidc.roles.role-claim-path=realm_access/roles
# Tell Quarkus to accept tokens from the external URL
quarkus.oidc.token.issuer=http://localhost:8081/realms/KitchensinkDev

# JWT Configuration
mp.jwt.verify.publickey.location=${quarkus.oidc.auth-server-url}/protocol/openid-connect/certs
# Use the external issuer URL that matches the token
mp.jwt.verify.issuer=http://localhost:8081/realms/KitchensinkDev

# Keycloak Admin Client Configuration
quarkus.keycloak.admin-client.server-url=http://keycloak:8080
quarkus.keycloak.admin-client.realm=KitchensinkDev
quarkus.keycloak.admin-client.client-id=kitchensink-backend
quarkus.keycloak.admin-client.client-secret=ZjAD40Bb20hScJxNpvVl4VyDGGX1JN06
quarkus.keycloak.admin-client.grant-type=CLIENT_CREDENTIALS

# CORS Configuration
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:5173
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=*
quarkus.http.cors.access-control-max-age=24H
